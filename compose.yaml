services:
  vault:
    image: hashicorp/vault:latest
    cap_add:
      - IPC_LOCK
    ports:
      - "8200:8200" # Expose the Vault API
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "root"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    networks:
      - backtier

  user:
    build:
      context: ./Backend/userService
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./Backend/userService:/app
    environment:
      DB_NAME: "postgres"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
      DB_HOST: "user_db"
      DB_PORT: "5432"
    depends_on:
      - vault
      - user_db
    networks:
      - backtier
      - user_network
  
  chat:
    build:
      context: ./Backend/chatService
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ./Backend/chatService:/app
    environment:
      DB_NAME: "postgres"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
      DB_HOST: "user_db"
      DB_PORT: "5432"
    depends_on:
      - vault
      - user_db
    networks:
      - backtier
      - user_network

  user_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    ports:
      - "5432:5432"
    volumes:
      - user_db_data:/var/lib/postgresql/data
    networks:
      - backtier
      - user_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  chat_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    ports:
      - "5433:5432"  # Note: Different port from user_db
    volumes:
      - chat_db_data:/var/lib/postgresql/data
    networks:
      - backtier
      - chat_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  gateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    depends_on:
      - vault
      - user
      - frontend
    volumes:
      - ./ApiGateway/config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ApiGateway/ssl:/etc/nginx/ssl
    networks:
      - backtier

  frontend:
    build:
      context: ./FrontEnd
      dockerfile: Dockerfile
    ports:
      - "5173:5173"  # Vite's default dev server port
    volumes:
      - ./FrontEnd:/app  # Mount the entire FrontEnd directory
      - /app/node_modules # Preserve node_modules from container
    environment:
      - NODE_ENV=development
    command: npm run dev -- --host  # Run dev server and allow external connections
    networks:
      - backtier
      - frontier

volumes:
  user_db_data:
  chat_db_data:
  frontend_dist:

networks:
  user_network:
    driver: bridge
  backtier:
    driver: bridge
  frontier:
    driver: bridge
  chat_network:
    driver: bridge
